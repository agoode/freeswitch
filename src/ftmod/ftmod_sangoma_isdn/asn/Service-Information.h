/*
 * Generated by asn1c-0.9.27 (http://lionet.info/asn1c)
 * From ASN.1 module "InterceptModule"
 * 	found in "../lawful-interception.asn1"
 */

#ifndef	_Service_Information_H_
#define	_Service_Information_H_


#include <asn_application.h>

/* Including external dependencies */
#include <OCTET_STRING.h>
#include <constr_SET.h>

#ifdef __cplusplus
extern "C" {
#endif

/* Dependencies */

/*
 * Method of determining the components presence
 */
typedef enum Service_Information_PR {
	Service_Information_PR_high_layer_capability,	/* Member high_layer_capability is present */
	Service_Information_PR_tMR,	/* Member tMR is present */
	Service_Information_PR_bearerServiceCode,	/* Member bearerServiceCode is present */
	Service_Information_PR_teleServiceCode,	/* Member teleServiceCode is present */
} Service_Information_PR;

/* Service-Information */
typedef struct Service_Information {
	OCTET_STRING_t	*high_layer_capability	/* OPTIONAL */;
	OCTET_STRING_t	*tMR	/* OPTIONAL */;
	OCTET_STRING_t	*bearerServiceCode	/* OPTIONAL */;
	OCTET_STRING_t	*teleServiceCode	/* OPTIONAL */;
	
	/* Presence bitmask: ASN_SET_ISPRESENT(pService_Information, Service_Information_PR_x) */
	unsigned int _presence_map
		[((4+(8*sizeof(unsigned int))-1)/(8*sizeof(unsigned int)))];
	
	/* Context for parsing across buffer boundaries */
	asn_struct_ctx_t _asn_ctx;
} Service_Information_t;

/* Implementation */
extern asn_TYPE_descriptor_t asn_DEF_Service_Information;

#ifdef __cplusplus
}
#endif

#endif	/* _Service_Information_H_ */
#include <asn_internal.h>
